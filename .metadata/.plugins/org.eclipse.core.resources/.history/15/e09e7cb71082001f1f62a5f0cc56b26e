package com.kosta.bank.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.kosta.bank.dto.Member;
import com.kosta.bank.service.MemberService;



@Controller
public class MemberController {

	@Autowired
	private MemberService memberService;
	
	@RequestMapping(value="login")
	public String login() {
		return "login";
	}
	@RequestMapping(value="login",method = RequestMethod.POST)
	public String login(@RequestParam("id")String id,@RequestParam("password")String password) {
		
		try {
			Member member = memberService.login(id, password); 
			return "makeaccount";
						
		} catch (Exception e) {
			e.printStackTrace();
			return "err";
		}
			
	}
	
	@RequestMapping(value="join")
	public String join() {
		return "join";
	}
	@RequestMapping(value="join",method = RequestMethod.POST)
	public String join(Member member) {
		
		try {
			memberService.join(member);			
			return "login";
		} catch (Exception e) {
			e.printStackTrace();
			return "err";
		}
		
	
	}
	//ajax 의 중복체크 처리 위한 mapping (Model을 주지 않음)
	//@ResponseBody  : view가 아니라 데이터를 준다는 의미 
	@RequestMapping(value="memberDoubldId",method=RequestMethod.POST)
	@ResponseBody
	public String memberDoubleId(@RequestParam("id")String id) {

		try {
			boolean check  = memberService.checkDoubleId(id);
			return String.valueOf(check);
				
		} catch (Exception e) {
			e.printStackTrace(); 
			return e.getMessage();
		}

	}
}
