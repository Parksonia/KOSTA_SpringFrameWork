package com.kosta.board.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.kosta.board.dto.Board;
import com.kosta.board.service.BoardService;
import com.kosta.board.utils.PageInfo;

@Controller
public class BoardController {

	@Autowired
	private BoardService boardService;
	
	@RequestMapping("/boardList")
	public ModelAndView boardList(@RequestParam (value="page" ,required=false,defaultValue = "1")Integer page) {
		// 파라미터 name=page를 가져오고 기본값을 1로 지정 , required = false 값이 없으면 404에러   
		ModelAndView mav = new ModelAndView();
	
		try {
		
			PageInfo pageInfo = new PageInfo();
			pageInfo.setCurPage(page);
			List<Board> boardList = boardService.boardList(pageInfo);
			mav.addObject("boardList", boardList);
			mav.addObject("pageInfo",pageInfo);
			mav.setViewName("boardlist");
			
		} catch (Exception e) {
			e.printStackTrace();
			mav.addObject("err",e.getMessage());
			mav.setViewName("err");			
		}
		return mav;
	}
	
	@RequestMapping("/boardDetail")
	public ModelAndView boardDetail(@RequestParam("num")Integer num) {
		ModelAndView mav = new ModelAndView();
		
		try {
			Board board = boardService.boardDetail(num);
			mav.addObject("board", board);
			mav.setViewName("boarddetail");
			
		} catch (Exception e) {
			e.printStackTrace();
			mav.addObject("err", e.getMessage());
			mav.setViewName("err");
		}
		
		return mav;
	}
	

	
	@RequestMapping(value="/boardWrite",method=RequestMethod.GET)
	public String boardWrite() {		
		return "writeform";
	}
	//@RequestPart 파라미터를 따로 가져오고 싶을 때 사용
	@RequestMapping(value="/boardWrite",method=RequestMethod.POST)
	public String boardWrite(@ModelAttribute Board board,
							 @RequestPart(value="file",required=false)MultipartFile file,
							 @RequestPart(value="dfile",required=false)MultipartFile dfile,Model model) {
		ModelAndView mav = new ModelAndView();
		try {
			System.out.println(board);
			boardService.boardWrite(board, file, dfile);
			return "redirect:boardDetail?num="+board.getNum();
			
		} catch (Exception e) {
			e.printStackTrace();
			model.addAttribute("err", e.getMessage());	
			return "err";
		}
		
	}
	
	@RequestMapping(value="/modifyboard", method=RequestMethod.GET)
	public ModelAndView boardModify(@RequestParam("num")Integer num) {
			ModelAndView mav = new ModelAndView();
			try {
				Board board = boardService.boardDetail(num);
				mav.addObject("board", board);
				mav.setViewName("modifyform");
			} catch (Exception e) {
				mav.addObject("err", e.getMessage());
				mav.setViewName("err");
			}
		
		return mav;
	}
	
	@RequestMapping(value="modifyboard",method=RequestMethod.POST)
	public String boardModify(@ModelAttribute Board board) {

		try {
			return "redirect:boardDetail?num="+board.getNum();
		} catch (Exception e) {
			return "err";
		}

	}
		
}
