package com.kosta.shop.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.kosta.shop.dto.Cart;
import com.kosta.shop.dto.Goods;
import com.kosta.shop.dto.Member;
import com.kosta.shop.service.ShopService;

@Controller
public class ShopController {
	
	@Autowired
	private HttpSession session;

	@Autowired
	private ShopService shopService;
	
	@RequestMapping(value="/",method=RequestMethod.GET)
	public String index() {
		return "index";
	}

	@RequestMapping(value="/main")
	public ModelAndView shopMain() {
		ModelAndView mav = new ModelAndView();
		
		try {
			List<Goods> lists = shopService.goodsLists();
			mav.addObject("goods", lists);
			mav.addObject("user", session.getAttribute("member"));
			mav.setViewName("shopMain");
			
			
		} catch (Exception e) {
			e.printStackTrace();
			
		}

		return mav;
	}

	@RequestMapping(value="/logout") 
	public String logout() {
		Member member = (Member)session.getAttribute("member");
		if(member !=null) session.invalidate();
		return"index";
	}

	@RequestMapping(value="/cartList") 
	public ModelAndView cartList() {
		ModelAndView mav = new ModelAndView();
		Member member = (Member)session.getAttribute("member");
		session.setAttribute("user", member);
		
		try {
			List<Cart> cartlist  = shopService.allCartList(member.getUserid());
			mav.addObject("cartList", cartlist);
			mav.setViewName("cartList");
		} catch (Exception e) {
			e.printStackTrace();
			mav.addObject("action", "장바구니조회");
		}
		
		return mav;
	}
	
	@RequestMapping(value="/mypage") 
	public String myPage() {
	
		return "mypage";
	}
	
	@RequestMapping(value="goodsRetrieve")
	public ModelAndView goodsDetail(@RequestParam("gCode")String gCode
				@RequestParam(name="cart",required = false,defaultValue ='N')String cart) {
		ModelAndView mav = new ModelAndView();
		System.out.println(gCode);
		
		try {
			
			Goods item = shopService.goodsDetail(gCode);
			mav.addObject("item", item);
			mav.setViewName("goodsRetrieve");
			Member member = (Member)session.getAttribute("member");
			session.setAttribute("user", member);
		} catch (Exception e) {
			e.printStackTrace();
			mav.addObject("action","상품 상세 조회" );
			mav.addObject("message", "상품 상세 조회 실패");
			mav.setViewName("memberResult");
		}
		return mav;
	}
	
	@RequestMapping(value="addCart",method=RequestMethod.GET)
	public String addCart(@ModelAttribute Cart cart,Model model) {
		
		String userid = ((Member)session.getAttribute("member")).getUserid();
		cart.setUserid(userid);
		Map<String,Object> map = new HashMap<>();
		
		
		try {
			boolean addCart  = shopService.addCartList(cart);
			Cart cartOne = new Cart();
			map.put("cart",addCart);		
			model.addAttribute("param", map);
			return "redirect:/goodsRetrieve?gCode="+cart.getgCode();
		} catch (Exception e) {
			
			e.printStackTrace();
			return "";
		}
		
		
	}
	
	@RequestMapping(value="orderConfirm")
	public ModelAndView orderConfirm(Goods goods,@RequestParam("gSize")String gSize,@RequestParam("gColor")String gColor,
							@RequestParam("gAmount")Integer gAmount) {
		//gDTO : 상품 정보 
		//gSize..등 
		
		ModelAndView mav = new ModelAndView();
		try {
			mav.addObject("gDTO", goods);
			mav.addObject("gSize", gSize);
			mav.addObject("gColor", gColor);
			mav.addObject("gAmount", gAmount);
			mav.setViewName("orderConfirm");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	
	
	
	
}
